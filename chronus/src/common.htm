








/**                       
 * モジュール　：就業システム・JavaScript共通関数                                         
 *　新規作成　：　DHC　2002/09
 *　バージョン：　　　0.0.1　
 */        
var TO_INT = 100;
var runtimes = 0;

/* 開発環境等で右クリックの機能を使用したい場合は、
 *「右クリック禁止処理（BP2 - 0434）-->」から「<--右クリック禁止処理（BP2 - 0434）」までを削除して下さい。 */

/* 右クリック禁止処理（BP2 - 0434）--> */
/**                       
 * 機    能：右クリック禁止処理
 */



function myEvent(e){
  if ( navigator.appName=="Microsoft Internet Explorer" && (event.button==2 || event.button==3) 
    || navigator.appName=="Netscape" && (e.which==2 || e.which==3)) {
      return myEventContext(e);
  }
}

function myEventContext(e){
  return false;
}

if (navigator.appName=="Netscape" && navigator.appVersion.indexOf("4.73")!= -1 ){    //NN4.73
  document.captureEvents(Event.MOUSEDOWN);
}else{                       //IE6,NN6.2でのコンテキストメニューの抑止
  document.oncontextmenu = myEventContext ;
}

document.onmousedown = myEvent ;

 


/* <--右クリック禁止処理（BP2 - 0434） */

/* B1-0120 ↓*/
/**                       
 * 機    能：入力文字の両側空白(半角・全角)をカットする。
 * @param: 入力文字列
 * @return：空白カット後の文字列
 */
function Trim(strInput)
{
	var strRet, strFinal;
	strTemp = strInput;
	//LTRIM
	strRet = LTrim(strTemp);
	//RTRIM
	strFinal = RTrim(strRet);
	//結果
	return strFinal;

}
/**                       
 * 機    能：入力文字の右側空白(半角・全角)をカットする。
 * @param: 入力文字列
 * @return：空白カット後の文字列
 */
function RTrim(strTemp)
{
	var nLoop = 0;
	var strReturn = strTemp;
	while (nLoop < strTemp.length)
	{
		if ((strReturn.substring(strReturn.length - 1, strReturn.length) == " ") || (strReturn.substring(strReturn.length - 1, strReturn.length) == "　"))
		{
			strReturn = strTemp.substring(0, strTemp.length - (nLoop + 1));
		}
		else
		{
			break;
		}
		nLoop++;
	}
	return strReturn;
}
/**                       
 * 機    能：入力文字の左側空白(半角・全角)をカットする。
 * @param: 入力文字列
 * @return：空白カット後の文字列
 */
function LTrim(strTemp)
{
	var nLoop = 0;
	var strReturn = strTemp;
	while (nLoop < strTemp.length)
	{
		if ((strReturn.substring(0, 1) == " ") || (strReturn.substring(0, 1) == "　"))
		{
			strReturn = strTemp.substring(nLoop + 1, strTemp.length);
		}
		else
		{
			break;
		}
		nLoop++;
	}
	return strReturn;
}
/* B1-0120 ↑*/

/**                       
 * 機    能：画面遷移処理                                         
 * @param: aimLabel   　画面動作                                      
 * @return： true:正常  false:異常                                
 */        

function LinkIt(aimLabel,aimFrame) {
	if ( runtimes!=0 ) {
		return false;
	}
    if(top.MENU){
      if(top.MENU.document.FORM_COMMON.menuLinkFlag.value=="1"){
         return false;
      }
    }
    
	runtimes = runtimes + 1;
	var aimForm ;
	if(aimFrame == undefined){
		aimForm = OPERATION.document.FORM_COMMON;
	}else{
		aimForm = eval("OPERATION."+aimFrame+".document.FORM_COMMON");
	}
   
	aimForm.LabelName.value = aimLabel;
	aimForm.submit();
    return false;
}


/**
 * runtimes変数を戻す。
 */
function getRuntimeValue(){
	return runtimes;
}


/**
* 機能：メニュー画面での２度押しを回避する。フラグのリセット
* @param:aimLabel 画面遷移ラベル
*/
function resetMenuLinkIt(){
//BP1-0100B- 0039↓
	if(top.MENU.document.FORM_COMMON){
		top.MENU.document.FORM_COMMON.menuLinkFlag.value="0";
	}
	runtimes = 0 ;
//BP1-0100B- 0039↑
}

/**                       
 * 機    能：画面オブジェクトを取得する                                         
 * @param: frmName　フォーム名   objName コントロール名
 * @return：画面オブジェクト                               
 */  
function getObject(frmName, objName,aimFrm) {
	if(aimFrm == undefined){
		return eval("OPERATION.document." + frmName + "." + objName);
	}
	return eval("OPERATION." + aimFrm + ".document." + frmName + "." + objName);
}

/**                       
 * 機    能：日付チェック yyyy/mm/dd or yyyy/m/d                                         
 * @param: frmName　フォーム名 　obj　コントロール   dateKind 日付種類                                      
 * @return：true:正常  false:異常                               
 */
function HIZUKE_Check(frmName, obj, dateKind,aimFrm) {

	var nYear;
	var nMonth;
	var nDay;
	var nLen;
	var szWork;
	var szWork2;
	var i;
	var j;

	if(fnIsDateType(obj)==false){
		errobj = getObject(frmName, "ZZ00E050",aimFrm);
		
		showErrorEx(errobj.value,obj,null,aimFrm);	
		return false;
	}
	//  0618 -> 06/18 に書き換える
	if(obj.value.length == 4) {
		index = obj.value.indexOf("/");
		if(index == -1) {
			strObject1 = obj.value.substring(0,2);	
			strObject2 = obj.value.substring(2);
			obj.value = strObject1.concat("/",strObject2);
		} 
	}
	//  20020618 -> 2002/06/18 に書き換える
	if(obj.value.length == 8) {
		index = obj.value.indexOf("/");
		if(index == -1) {
			strObject1 = obj.value.substring(0,4);	
			strObject2 = obj.value.substring(4,6);
			strObject3 = obj.value.substring(6);
			obj.value = strObject1.concat("/",strObject2,"/",strObject3);
		} 		 
	}
	
	// 4/1 -> 2002/04/01 に書き換える
	if((obj.value.length <= 5)&&(obj.value.length >= 3)) {
		index = obj.value.indexOf("/");
		if(index != -1) {
			strObject1 = obj.value.substring(0,index);
			strObject2 = obj.value.substring(index+1);
			if(strObject1.length == 1) {
				strObject1 = "0" + strObject1;
			}
			if(strObject2.length == 1)	{	
				strObject2 = "0" + strObject2 ;
			}						
			obj.value = strObject1.concat("/",strObject2);
			d = new Date();			
		    obj.value = d.getFullYear() + "/" + obj.value;
		} 
	}
		
	for(szWork2="", nLen=obj.value.length, i=0, j=0;i<nLen;i++){
		szWork = obj.value.substring(i,i+1);
		if(szWork=="/"){
			j++;
		}
	}

	tmp = obj.value;
	if(j==1){
		//  3/4 -> 2002/3/4 に書き換える。
		now = new Date();		
		tmp = obj.value;
	}
	for(szWork2="", nLen=tmp.length, i=0, j=0;i < nLen;i++){
		szWork = tmp.substring(i,i+1);
		if(szWork=="/"){
			if(j==0){
				nYear=szWork2;
			}else if(j==1){
				nMonth=szWork2;
			}else if(j==2){
				nDay=szWork2;
			}
			j++;
			szWork2="";
		}else{
			szWork2+=szWork;
		}
	}
	nDay=szWork2;
	if(j!=2){
		errobj = getObject(frmName, "ZZ00E051",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);	
		
		return false;
	}
	nYear=parseInt(nYear,10);
	if(nMonth.length==2){
		nMonth=Math.floor(parseFloat("0."+nMonth)*100+0.5);
	}else{
		nMonth=parseInt(nMonth,10);
	}
	if(nDay.length == 2){
		nDay=Math.floor(parseFloat("0."+nDay)*100+0.5);
	}else{
		nDay=parseInt(nDay,10);
	}
	if(isNaN(nYear)||isNaN(nMonth)||isNaN(nDay)){
		errobj = getObject(frmName, "ZZ00E050",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);	
		
		return false;
	}

	if (dateKind == "1") {
    	if((nYear<1990)||(nYear>2029)){    
    		errobj = getObject(frmName, "ZZ00E052",aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);	
		    	
    		return false;
    	}
    } else if (dateKind == "2") {
        if((nYear<1930)||(nYear>2029)){    
        	errobj = getObject(frmName, "ZZ00E053",aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);	
		    
    		return false;
    	}
    }
    
	if((nMonth<1)||(nMonth>12)){	
		errobj = getObject(frmName, "ZZ00E051",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);	
		
		return false;
	}
	switch(nMonth){
	case 1:
	case 3:
	case 5:
	case 7:
	case 8:
	case 10:
	case 12:
		if((nDay<1)||(nDay>31)){	
			errobj = getObject(frmName, "ZZ00E051",aimFrm);	
			showErrorEx(errobj.value,obj,null,aimFrm);	
			
			return false;
		}
	break;

	case 4:
	case 6:
	case 9:
	case 11:
		if((nDay<1)||(nDay>30)){	
			errobj = getObject(frmName, "ZZ00E051",aimFrm);	
			showErrorEx(errobj.value,obj,null,aimFrm);	
			
			return false;
		}
	break;

	case 2:
		if(nYear%4){
			if((nDay<1)||(nDay>28)){	
				errobj = getObject(frmName, "ZZ00E051",aimFrm);	
			    showErrorEx(errobj.value,obj,null,aimFrm);	
			    		
				return false;
			}
		}else{
			if((nDay<1)||(nDay>29)){	
				errobj = getObject(frmName, "ZZ00E051",aimFrm);	
			    showErrorEx(errobj.value,obj,null,aimFrm);	
			    		
				return false;
			}
		}
	break;

	default:		
	    errobj = getObject(frmName, "ZZ00E051",aimFrm);	
		showErrorEx(errobj.value,obj,null,aimFrm);	
		
		return false;
	} //swich
	//ゼロ埋め
	obj.value = String(nYear);
	if (String(nMonth).length == 1) {
		obj.value = obj.value + "/0" + String(nMonth);
	} else {
		obj.value = obj.value + "/" + String(nMonth);
	}
	if (String(nDay).length == 1) {
		obj.value = obj.value + "/0" + String(nDay);
	} else {
		obj.value = obj.value + "/" + String(nDay);
	}

	return true;
}

/**                       
 * 機    能："0123456789/" 以外使われていないかチェック                                        
 * @param: obj  対象                                     
 * @return：true:正常  false:異常                               
 */
function fnIsDateType(obj){
	var len;
	var i;
	var wk;

	len = obj.value.length;
	
	
	for(var i=0;i < len;i++){
	
		wk = obj.value.substr(i,1);
		if(!((wk=="/")||(wk=="1")||(wk=="2")||(wk=="3")||(wk=="4")||(wk=="5")||(wk=="6")||(wk=="7")||(wk=="8")||(wk=="9")||(wk=="0"))){
			return false;
		}
	}
	return true;
}

/**                       
 * 機    能：年月はYYYY/MMの形式                                        
 * @param:  frmName　フォーム名 　obj　コントロール   dateKind日付種類                                   
 * @return：true:正常  false:異常                            
 */
function fnDateTypeCheck(frmName, obj ,dateKind,aimFrm){

	var nYear;
	var nMonth;
	var nLen;
	var szWork;
	var szWork2;
	var i;
	var j;
    
    //半角数字0〜9および半角スラッシュだけで構成されている。
	if(fnIsDateType(obj)==false){		
		errobj = getObject(frmName, "ZZ00E055",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);	
		
		return false;
	}
	
	//MMが入力されている場合、現在の年をYYYYとし、YYYY/MMと入力値を補整する。
	if(obj.value.length <=2) {
		d = new Date();	
		
		obj.value = d.getFullYear() + obj.value; 

	}
	
	index = obj.value.indexOf("/");
	if(index == -1) {
		//MMが入力されている場合、現在の年をYYYYとし、YYYY/MMと入力値を補整する。
		strObject1 = obj.value.substring(0,4);		
		strObject2 = obj.value.substring(4);
		obj.value = strObject1.concat("/",strObject2);		
	}
	
	for(szWork2="",nLen=obj.value.length,i=0,j=0;i < nLen;i++){
		szWork = obj.value.substring(i,i+1);
		if(szWork=="/"){
			if(j==0){
				nYear=szWork2;
			}else if(j==1){
				nMonth=szWork2;
			}
			j++;
			szWork2="";
		}else{
			szWork2+=szWork;
		}
	}
	
	nMonth=szWork2;
	if(j!=1){		
		errobj = getObject(frmName, "ZZ00E055",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	
	nYear=parseInt(nYear,10);
	if(nMonth.length==2){
		nMonth=Math.floor(parseFloat("0."+nMonth)*100+0.5);
	}else{
		nMonth=parseInt(nMonth,10);
	};

	if(isNaN(nYear)||isNaN(nMonth)){	
		errobj = getObject(frmName, "ZZ00E055",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);	
		
		return false;
	}
	if (dateKind == "1") {
    	if((nYear<1990)||(nYear>2029)){    	
    		errobj = getObject(frmName, "ZZ00E054",aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
		    
    		return false;
    	}
    } else if (dateKind == "2") {
        if((nYear<1930)||(nYear>2029)){    
        	//errobj = getObject(frmName, "ZZ00E054");  //P1-0002
        	errobj = getObject(frmName, "ZZ00E056",aimFrm);    //P1-0002
		    showErrorEx(errobj.value,obj,null,aimFrm);
		    		
    		return false;
    	}
    }
	if((nMonth<1)||(nMonth>12)){	
		errobj = getObject(frmName, "ZZ00E055",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	if (nMonth<10) {
		//月が1桁の場合ゼロ埋めする。
		obj.value = String(nYear) + "/0" + String(nMonth);
	}else{
		obj.value = String(nYear) + "/" + String(nMonth);
	}
	
	return true;
}


/**                       
 * 機    能：半角数字だけで構成されていることをチェック                                        
 * @param: szData  検査データ                              
 * @return：true:正常  false:異常                            
 */
function fnIsNumeric(szData){
	var len = szData.length;
	var i;
	var wk;
	for(i=0;i < len;i++){
		wk = szData.substr(i,1);
		if(!((wk=="-")||(wk==".")||(wk=="1")||(wk=="2")||(wk=="3")||(wk=="4")||(wk=="5")||(wk=="6")||(wk=="7")||(wk=="8")||(wk=="9")||(wk=="0"))){
			return false;
		}
	}
	if(isNaN(parseFloat(szData))){
		return false;
	}
	return true;
}

	
/**                       
 * 機    能：時刻転換する                                        
 * @param: szBaseData 転換データ                                 
 * @return：szWork 転換瘁データ                        
 */
function fnMakeJikoku(szBaseData){
	var flg;
	var szWork;
	if(szBaseData.substr(0,1)=="-"){
		flg=true;
		szWork=szBaseData.substr(1,(szBaseData.length-1));
	}else{
		flg=false;
		szWork=szBaseData;
	}
	if(szWork.length==1){
		szWork="0"+szWork+"00";
	}else if(szWork.length==2){
		if(parseInt(szWork,10)<24){
			szWork=szWork+"00";
		}else if(parseInt(szWork,10)>=60){
			szWork=szWork+"00";
		}else{
			szWork="00"+szWork;
		}
	}else if(szWork.length==3){
		szWork="0"+szWork;
	}else{
		szWork=szWork;
	}
	if(flg==true){
		szWork="-"+szWork;
	}
	return  szWork;
}

/**                       
 * 機    能：年月中に"0"を追加する                                      
 * @param: obj　コントロール                           
 * @return：1/9--->01/09                           
 */
function addZero(obj){
	var split = obj.value.indexOf("/");
	if ( split < 0){		
		return ;
	}
	var year = obj.value.substring(0,split);
	if( year.length == 1){
		if(year>=0&&year<=9){
			year="0"+year;
		}
	}
	var month = obj.value.substring(split+1,obj.value.length);
	if( month.length == 1){
		if(month>=0&&month<=9){
			month="0"+month;
		}
	}
	obj.value = year+"/"+month;
	return;

}

/**                       
 * 機    能：日付をチェックする                                      
 * @param: frmName　フォーム名 　obj　コントロール   
 * @param: dateKind 日付種類   1---[運用日付],2---[一般日付]                                   
 * @return：true:正常  false:異常                               
 */
function checkDate(frmName,obj, dateKind,aimFrm){

	if (obj.value.length!=0 ){
		if ( HIZUKE_Check(frmName,obj,dateKind,aimFrm) == false ) {
			return false;
		} else {
			return true;
		}
	} else {
		return true;
	}
}

/**                       
 * 機    能：年月度をチェックする                                      
 * @param: frmName　フォーム名 　obj　コントロール   dateKind 日付種類                                      
 * @return：true:正常  false:異常                               
 */
function checkYearMonth(frmName,obj, dateKind,aimFrm){

	if (obj.value.length !=0 ){
		if ( fnDateTypeCheck(frmName,obj,dateKind,aimFrm) == false ) {
			return false;
		} else {
			return true;
		}
	} else {
		return true;
	}
}

/**
 * 機    能：[文字列(X)][備考][差戻理由]をチェックする
 * @param: frmName　フォーム名 　obj　コントロール     maxLength 入力できる桁数
 * @return：true:正常  false:異常
 */
function checkInputString(frmName,obj,maxLength,aimFrm) {
	
	inStr = obj.value;
	
	if (inStr.length==0 ){
		return true;
	}
		
	//半角カタカナが含まるか？
	if (check_hankaku_kana(frmName,obj) == false ) {
		errobj = getObject(frmName, "ZZ00E010",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
    
    
	//禁則文字チェック
	if (KINSOKU(inStr) == true) {
		errobj = getObject(frmName, "ZZ00E012",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	
	//入力最大文字数を超えていない。
	nFinalLength = getStringLength(inStr);

	if (nFinalLength > maxLength) {
		errobj = getObject(frmName, "ZZ00E013",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	
	return true;
}

/**
 * 機    能：[文字列(X)][備考][差戻理由]をチェックする
 * @param: frmName　フォーム名 　obj　コントロール     maxLength 入力できる桁数
 * @return：true:正常  false:異常
 */
function checkInputString_andTrim(frmName,obj,maxLength,aimFrm) {

	TmpStr = obj.value;
	obj.value = Trim(TmpStr);

	inStr = obj.value;

	if (inStr.length==0 ){
		return true;
	}

	//半角カタカナが含まるか？
	if (check_hankaku_kana(frmName,obj) == false ) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E010");
		}else{
			errobj = getObject(frmName, "ZZ00E010",aimFrm);
		}	
		showErrorEx(errobj.value,obj,null,aimFrm);

		return false;
	}

	//禁則文字チェック
	if (KINSOKU(inStr) == true) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E012");
		}else{
			errobj = getObject(frmName, "ZZ00E012",aimFrm);
		}
		showErrorEx(errobj.value,obj,null,aimFrm);

		return false;
	}

	//入力最大文字数を超えていない。
	nFinalLength = getStringLength(inStr);

	if (nFinalLength > maxLength) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E013");
		}else{
			errobj = getObject(frmName, "ZZ00E013",aimFrm);
		}
		showErrorEx(errobj.value,obj,null,aimFrm);

		return false;
	}

	return true;
}

/**                       
 * 機    能：半角カナを使っていないかチェック                                         
 * @param: frmName フォーム名　obj コントロール                                        
 * @return：true:正常  false:異常                               
 */
function check_hankaku_kana(frmName, obj){

	str = obj.value;
	err = 0;
	
	
	for (var i=0;i<str.length;i++){
	
		if ("ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｯｬｭｮ､｡｢｣ﾞﾟ･ｰ".indexOf(str.charAt(i)) >= 0) {err++; break;}
	}
	if (err!=0) {		
		return false;
	}
	return true;
}

/**                       
 * 機    能：[回数]をチェックする                                      
 * @param: frmName　フォーム名 　obj　コントロール                                 
 * @return：true:正常  false:異常                               
 */
function checkKaisu(frmName,obj) {
		
	inStr = obj.value;
	
	if (inStr.length==0 ){
		return true;
	}
	//入力値が＞0である。
	if(inStr.substr(0,1)=="-"){
		errobj = getObject(frmName, "ZZ00E021");
		showErrorEx(errobj.value,obj);
		
		return false;
	}
	
	//半角数字0〜9および半角ピリオドだけで構成されている。
	err = 0;
	
	
	for (var i=0;i<inStr.length;i++){
	
		if (inStr.charAt(i).indexOf(".") >= 0) {
			err++;
			if (err >= 2) {	
				errobj = getObject(frmName, "ZZ00E020");
				showErrorEx(errobj.value,obj);
							
				return false;
			}
		}
	}
	
	if(fnIsNumeric(inStr)==false){
		errobj = getObject(frmName, "ZZ00E020");
		showErrorEx(errobj.value,obj);
			
		return false;
	}
	
	wk=parseFloat(inStr);
	if(isNaN(wk)){
		errobj = getObject(frmName, "ZZ00E020");
		showErrorEx(errobj.value,obj);
			
		return false;
	}
	
	//2007/01/31(2006S-006：数値入力チェックバグ対応) HSV 葉 Start
	inStr=wk;
	//2007/01/31(2006S-006：数値入力チェックバグ対応) HSV 葉 E n d
	
	//入力値が≦9999999.99である。
	wk=Math.floor(wk*TO_INT);
	if(wk>=(10000000*TO_INT)!=0){	
		errobj = getObject(frmName, "ZZ00E022");
		showErrorEx(errobj.value,obj);
				
		return false;
	}
	
	//四捨五入して小数第2位まで求め、入力値を置き換える。
	obj.value=Math.floor((inStr*TO_INT)+0.5)/TO_INT;

	return true;
}

/**                       
 * 機    能：時間検査する                                       
 * @param:  frmName　フォーム名 　obj　コントロール  bMinusFlg  コントロールのインデックス  index
 * @return：true:正常  false:異常                            
 */
function checkTime(frmName,obj, bMinusFlg, index,aimFrm){	// Nozaki BP2-0218
	
	inStr = obj.value;
	var len=inStr.length;
	var addflg = "";
	
	if (inStr.length==0 ){
		return true;
	}
	
	if(inStr.substr(0,1)=="-"){
		
		addflg = "-";
		
		if(bMinusFlg==false){
			errobj = getObject(frmName, "ZZ00E031",aimFrm);
		    showErrorEx(errobj.value,obj,index,aimFrm);	// Nozaki BP2-0218
		    		
			return false;
		}else{
			inStr=inStr.substr(1,10);
			len--;
		}
	}
	
	//半角数字4文字以下で構成されている。
	if(fnIsNumeric(inStr)==false){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,index,aimFrm);		// Nozaki BP2-0218
				
		return false;
	}
	
	
	for(var i=0;i<len;i++){ 
	
		wk = inStr.substr(i,1);
		if((wk=="-")||(wk==".")){
			errobj = getObject(frmName, "ZZ00E030",aimFrm);
		    showErrorEx(errobj.value,obj,index,aimFrm);	// Nozaki BP2-0218
		    		
			return false;
		}
	}
	if (inStr.length>4 ){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,index,aimFrm);		// Nozaki BP2-0218
				
		return false;
	}
	
    //値を補整する。
    wk=fnMakeJikoku(inStr);
    obj.value = wk;		
    
    //HH が 00〜99 である。
	wJi=wk.substr(0,wk.length-2);
	wHun=wk.substr(wk.length-2,2);
	wJi=parseInt(wJi,10);
	
	if(wHun.substr(0,1)=="0"){
		wHun=parseInt(wHun.substr(1,1),10);
	}else{
		wHun=parseInt(wHun,10);
	}
	
	if(isNaN(wJi)||isNaN(wHun)){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,index,aimFrm);		// Nozaki BP2-0218
				
		return false;
	}
	 //MM が 00〜59 である。
	if((wHun>=60)||(wHun<0)){
		errobj = getObject(frmName, "ZZ00E033",aimFrm);
		showErrorEx(errobj.value,obj,index,aimFrm);		// Nozaki BP2-0218
			
		return false;
	}
	
	if(bMinusFlg==true){
		if (addflg=="-") {
			obj.value = "-" + obj.value;
		}
	}
	return true;
	
}

/**                       
 * 機    能：時間検査する                                       
 * @param:  frmName　フォーム名 　obj　コントロール  bMinusFlg                                 
 * @return：true:正常  false:異常                            
 */
function checkTime_forCalculationUnit(frmName,obj, bMinusFlg,aimFrm){
	
	inStr = obj.value;
	var len=inStr.length;
	var addflg = "";
	
	if (inStr.length==0 ){
		return true;
	}
	
	if(inStr.substr(0,1)=="-"){
		
		addflg = "-";
		
		if(bMinusFlg==false){
			errobj = getObject(frmName, "ZZ00E031",aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
		    		
			return false;
		}else{
			inStr=inStr.substr(1,10);
			len--;
		}
	}
	
	//半角数字4文字以下で構成されている。
	if(fnIsNumeric(inStr)==false){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	
	
	for(var i=0;i<len;i++){
	
		wk = inStr.substr(i,1);
		if((wk=="-")||(wk==".")){
			errobj = getObject(frmName, "ZZ00E030",aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
		    		
			return false;
		}
	}
	if (inStr.length>4 ){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	
    //値を補整する。
    wk=fnMakeJikoku(inStr);
    obj.value = wk;		
    
    //HH が 00〜99 である。
	wJi=wk.substr(0,wk.length-2);
	wHun=wk.substr(wk.length-2,2);
	wJi=parseInt(wJi,10);
	
	if(wHun.substr(0,1)=="0"){
		wHun=parseInt(wHun.substr(1,1),10);
	}else{
		wHun=parseInt(wHun,10);
	}
	
	if(isNaN(wJi)||isNaN(wHun)){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	 //MM が 00〜59 である。
	if((wHun>=60)||(wHun<0)){
		errobj = getObject(frmName, "ZZ00E033",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
			
		return false;
	}
	
	if(bMinusFlg==true){
		if (addflg=="-") {
			obj.value = "-" + obj.value;
		}
	}
	
	//0001〜2400であること
	wHour=wk.substr(0,wk.length-2);
	wMinute=wk.substr(wk.length-2,2);
	wTime=wHour+wMinute;
	wTime=parseInt(wTime,10);
	if((wTime<1)||(wTime>2400)){
		errobj = getObject(frmName, "MM01E170",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
			
		return false;
	}
	
	return true;
}

/**                       
 * 機    能：時刻検査する                                       
 * @param:  frmName　フォーム名 　obj　コントロール                             
 * @return：true:正常  false:異常                            
 */
function checkHourTime(frmName,obj,aimFrm){
	
	inStr = obj.value;
	var len=inStr.length;
	
	if (inStr.length==0 ){
		return true;
	}
	//半角数字4文字以下で構成されている。
	if(fnIsNumeric(inStr)==false){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	
	
	for(var i=0;i<len;i++){
	
		wk = inStr.substr(i,1);
		if((wk=="-")||(wk==".")){
			errobj = getObject(frmName, "ZZ00E030",aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
		    		
			return false;
		}
	}
	if (inStr.length>4 ){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	
	//値を補整する。
    wk=fnMakeJikoku(inStr);
    obj.value = wk;	
 
    wJi=wk.substr(0,2);
	wHun=wk.substr(2,2);
	
	if(wJi.substr(0,1)=="0"){
		wJi=parseInt(wJi.substr(1,1),10);
	}else{
		wJi=parseInt(wJi,10);
	}
	
	if(wHun.substr(0,1)=="0"){
		wHun=parseInt(wHun.substr(1,1),10);
	}else{
		wHun=parseInt(wHun,10);
	}
	
	if(isNaN(wJi)||isNaN(wHun)){
		errobj = getObject(frmName, "ZZ00E030",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
			
		return false;
	}
	//HH が 00〜24 である。
	if((wJi>=24)||(wJi<0)){
		errobj = getObject(frmName, "ZZ00E032",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	//MM が 00〜59 である。
	if((wHun>=60)||(wHun<0)){
		errobj = getObject(frmName, "ZZ00E033",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
				
		return false;
	}
	
	return true;
}

/**                       
 * 機    能：[社員番号]を検査する                                       
 * @param:  frmName　フォーム名 　obj　コントロール  maxLength 入力できる桁数               
 * @return：true:正常  false:異常                            
 */
function checkPersonCode(frmName,obj,maxLength,aimFrm){
	
	inStr = obj.value;
	
	if (inStr.length==0 ){
		return true;
	}
	//半角英数字をチェック
	if (checkEnglishOrNumber(inStr) == false) {
		errobj = getObject(frmName, "ZZ00E011",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	//入力最大文字数を超えていない。
	nFinalLength = getStringLength(inStr);
	if (nFinalLength > maxLength) {
		errobj = getObject(frmName, "ZZ00E013",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	
	//英字小文字を英字大文字に変換する。
	obj.value = obj.value.toUpperCase();
	//桁数が不足の場合先頭から0で埋めて、規定の桁数に入力値を補整する。
	if(obj.value.length < maxLength) {
		var newFlen = maxLength - obj.value.length;
		
		
		for(var i=0;i < newFlen;i++) { 
		
			obj.value = "0" + obj.value;
		}
	}
	
	return true;
}

/**                       
 * 機    能：[コード(X)]を検査する                                       
 * @param:  frmName　フォーム名 　obj　コントロール  maxLength 入力できる桁数               
 * @return：true:正常  false:異常                            
 */
function checkCode(frmName,obj,maxLength,aimFrm){
	
	inStr = obj.value;
	
	if (inStr.length==0 ){
		return true;
	}
	//半角英数字をチェック
	if (checkEnglishOrNumber(inStr) == false) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E011");
		}else{
			errobj = getObject(frmName, "ZZ00E011",aimFrm);
		}
		//errobj = getObject(frmName, "ZZ00E011",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}	
	
	//入力最大文字数と同じである。
	nFinalLength = getStringLength(inStr);
	if (nFinalLength != maxLength) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E014");
		}else{
			errobj = getObject(frmName, "ZZ00E014",aimFrm);
		}	
		//errobj = getObject(frmName, "ZZ00E014",aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}
	
	//英字小文字を英字大文字に変換する。
	obj.value = obj.value.toUpperCase();
	
	return true;
	
}

//2007/01/31(2006S-006：数値入力チェックバグ対応) HSV 葉 Start
/**
 * 機    能：NUMBER(X, Y)を検査する(checkNumberをバグ対応する修正版)
 * @param:  frmName　フォーム名 　obj　コントロール  totalLength 全部桁数  decimal　小数桁数           
 * @return：true:正常  false:異常                            
 */
function checkNumberNew(frmName,obj,totalLength,decimal,vID,aimFrm){
	var id;
	if (vID==undefined) {
		id = "ZZ00E070";
	} else {
		id = vID;
	}
	
	inStr = obj.value;
	
	if (inStr.length==0 ){
		return true;
	}

    //半角数字だけで構成されていることをチェック                                        
    checkFlag =  fnIsNumeric(obj.value);
    if(!checkFlag){
		errobj = getObject(frmName, id);
		showErrorEx(errobj.value,obj);
		
		return false;
    }

    //checkNumberを呼出し
    return checkNumber(frmName,obj,totalLength,decimal,id,aimFrm);

}
//2007/01/31(2006S-006：数値入力チェックバグ対応) HSV 葉 E n d

/**                       
 * 機    能：NUMBER(X, Y)を検査する                                       
 * @param:  frmName　フォーム名 　obj　コントロール  totalLength 全部桁数  decimal　小数桁数           
 * @return：true:正常  false:異常                            
 */
function checkNumber(frmName,obj,totalLength,decimal,vID,aimFrm){
	var id;
	if (vID==undefined) {
		id = "ZZ00E070";
	} else {
		id = vID;
	}
	
	inStr = obj.value;
	
	if (inStr.length==0 ){
		return true;
	}
	//NUMBER(X,Y)を満たしていない
	if( isNaN(inStr) == true ) {
		errobj = getObject(frmName, id, aimFrm);
		showErrorEx(errobj.value,obj,null,aimFrm);
		
		return false;
	}	
	
	toCheck1 = new Number(inStr);
	toCheck2 = toCheck1.toString(); 
	//ここから PT不良対応 NO.BA1-0046  李偉利  2003/02/13
	//if ( toCheck2 < 0) {	
	//	errobj = getObject(frmName, "ZZ00E070");
	//	showErrorEx(errobj.value,obj);
			
	//	return false;	
	//}
	//ここまで PT不良対応 NO.BA1-0046  李偉利  2003/02/13
	
	obj.value = toCheck2;
	
	var pointIndex = toCheck2.indexOf(".");	
	if (pointIndex == -1 ) {
		if ( toCheck2.length <= totalLength-decimal){
			return true;
		} else {
//2007/05/11 HSV葉 修正 Start
//			errobj = getObject(frmName, id);
//		    showErrorEx(errobj.value,obj);
			errobj = getObject(frmName, id, aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
//2007/05/11 HSV葉 修正 End
		    
			return false;
		}	  
	} else {
		
		if ( pointIndex > totalLength - decimal){
//2007/05/11 HSV葉 修正 Start
//			errobj = getObject(frmName, id);
//		    showErrorEx(errobj.value,obj);
			errobj = getObject(frmName, id, aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
//2007/05/11 HSV葉 修正 End
		    
			return false;
		}	
		
		if ( toCheck2.length - pointIndex-1 >decimal){
//2007/05/11 HSV葉 修正 Start
//			errobj = getObject(frmName, id);
//		    showErrorEx(errobj.value,obj);
			errobj = getObject(frmName, id, aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
//2007/05/11 HSV葉 修正 End
		    
			return false;
		}
		
		if ( toCheck2.length - pointIndex-1 == 0){
//2007/05/11 HSV葉 修正 Start
//			errobj = getObject(frmName, id);
//		    showErrorEx(errobj.value,obj);
			errobj = getObject(frmName, id, aimFrm);
		    showErrorEx(errobj.value,obj,null,aimFrm);
//2007/05/11 HSV葉 修正 End
		    
			return false;
		}
		
	    return true;
	}
	
	return true;
}

/**
 * 機    能：禁則文字チェック			                          
 * 引    数：MOZI---文字列                                         
 * 戻 り 値：true:禁則文字ある  false:禁則文字無し                 
 */
function KINSOKU(MOZI){
	
	//入力項目桁数取得
	SAIZU = (MOZI).length;
	//”"”か”,”か”’”が含められた場合、エラー
	
	
	for (var I=1;I < SAIZU+1;I++){ 
	
		KETA = MOZI.substring(I-1,I);
		if ((KETA.charCodeAt(0) == 34) || (KETA.charCodeAt(0) == 39) || (KETA.charCodeAt(0) == 44)){
			return true;
		}
	}
	
	return false;
	
}


/**
 * 機    能：英数字チェック  			                          
 * 引    数：inStr   英数字列                                       
 * 戻 り 値：true:正常  false:異常               
 */
function checkEnglishOrNumber(inStr) 
{
    var compareString  = "abcdefghijklmnopqrstuvwxyz" +
                       "ABCDEFGHIJKLMNOPQRSTUVWXYZ" +
                       "1234567890";
    for (var i = 0; i < inStr.length; i++) {
    	if (compareString.indexOf(inStr.charAt(i)) == -1) {
      		return false;
    	}
    }
    return true;
}

/**
 * 機    能：エラーダイアログを表示する			                          
 * 引    数：strMsg エラー情報 obj　目前コントロール                                
 * 戻 り 値：なし           
 */
function showError(strMsg,obj,index,aimFrm){

//BS-0101-012↓
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
    if(self && self.top && self.top.MENU){
        //制御開始
		if(haveAlert()){
		  return false;
		}
	    top.MENU.document.FORM_COMMON.HaveAlert.value="have";
    }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
    if(opener && opener.top && opener.top.MENU){
    	//制御開始
		if(haveAlertForChild()){
		  return false;
		}
	    opener.top.MENU.document.FORM_COMMON.HaveAlert.value="have";
    } else if(top.MENU) {
        //制御開始
		if(haveAlert()){
		  return false;
		}
	    top.MENU.document.FORM_COMMON.HaveAlert.value="have";
    }
//BS-0101-012↑
	
    alert(makeupMessageEx(strMsg, obj,index,aimFrm));


	if(obj.disabled) {
	} else {
		if (obj.type=="select-one"){
			obj.focus();
		} else if(obj.type=="hidden") {
			//なにもしない
		} else {
			obj.focus();
			if(obj.type!="select-multiple")
				obj.select();
		}
	}

//BS-0101-012↓
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
    if(self && self.top && self.top.MENU){
        //制御終了
	    top.MENU.document.FORM_COMMON.HaveAlert.value="";
    }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
	if(opener && opener.top && opener.top.MENU){
    	//制御終了
	    opener.top.MENU.document.FORM_COMMON.HaveAlert.value="";
    } else if(top.MENU) {
        //制御終了
	    top.MENU.document.FORM_COMMON.HaveAlert.value="";
    }
	return false;
//BS-0101-012↑

}

/**
 * 機    能：エラーダイアログを表示する			                          
 * 引    数：strMsg エラー情報 obj　目前コントロール                                
 * 戻 り 値：なし           
 */
function showErrorEx(strMsg,obj,index,aimFrm){							// Nozaki BP2-0218

//BP1-0100B- 0039↓
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
    if(self && self.top && self.top.MENU){
        //制御開始
		if(haveAlert()){
		  return false;
		}
	    top.MENU.document.FORM_COMMON.HaveAlert.value="have";
    }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
    if(opener && opener.top && opener.top.MENU){
    	//制御開始
		if(haveAlertForChild()){
		  return false;
		}
	    opener.top.MENU.document.FORM_COMMON.HaveAlert.value="have";
    } else if(top.MENU) {
        //制御開始
		if(haveAlert()){
		  return false;
		}
	    top.MENU.document.FORM_COMMON.HaveAlert.value="have";
    }
//BP1-0100B- 0039↑

//ここから PT不良対応 NO.BA1-0027  李偉利  2003/02/08 
    //alert(strMsg);
    alert(makeupMessageEx(strMsg, obj, index, aimFrm));					// Nozaki BP2-0218
//ここまで PT不良対応 NO.BA1-0027  李偉利  2003/02/08 
    
	if(obj.disabled) {	//B1-0029
	} else {			//B1-0029
		if (obj.type=="select-one"){
			obj.focus();
		} else if(obj.type=="hidden") {
			//なにもしない
		} else {
	//ここから PT不良対応 NO.BA1-0027  李偉利  2003/02/08 
			obj.focus();
			if(obj.type!="select-multiple") {
				obj.value = "";
			}
	//ここまで PT不良対応 NO.BA1-0027  李偉利  2003/02/08 
		}
	}					//B1-0029
	
//BP1-0100B- 0039↓
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
    if(self && self.top && self.top.MENU){
        //制御終了
	    top.MENU.document.FORM_COMMON.HaveAlert.value="";
    }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
	if(opener && opener.top && opener.top.MENU){
    	//制御終了
	    opener.top.MENU.document.FORM_COMMON.HaveAlert.value="";
    } else if(top.MENU) {
        //制御終了
	    top.MENU.document.FORM_COMMON.HaveAlert.value="";
    }
	return false;
//BP1-0100B- 0039↑
}

/**
 * 機    能：時⇒分変換		                          
 * 引    数：objValue   文字列                      
 * 戻 り 値：分   
 * 例えば　：時間⇒分 0830 ⇒8*60+30
 */
function HMtoMI(objValue){
	
	var sValue = new String(objValue); 
    var sValueLen = sValue.length;
    var abs=sValue.substring(0,1);									// Nozaki B1-0293
    var nHH=new Number(sValue.substring(0,sValueLen - 2));
    var nMM=new Number(sValue.substring(sValueLen - 2,sValueLen));

    if (objValue==""){
        return 0;
    }else{
		if (abs!="-"){												// Nozaki B1-0293
        	return nHH*60+nMM;
		}else{
			return -((-nHH)*60+nMM);
		}
    }
}

/**
 * 機    能：分⇒時間変換	                          
 * 引    数：objValue   文字列                      
 * 戻 り 値：HHMM  
 * 例えば　：分⇒時間  8*60+30⇒0830
 */
function MItoHM(objValue){
	
    var sValue=parseInt(objValue,10); 
    var result=new Number();
    var result2=new Number();
    var result3=new String();
    var zikan=new String();
    if (objValue!=""){
		if (sValue>0) {
			result2=sValue % 60;
	        result=(sValue-result2) / 60;
	        if (result2==0) {
	            result3="00";
	        }else if (result2<10){
	            result3="0"+result2.toString();
	        }else{
	            result3=result2;
	        }
	        zikan=result.toString()+result3;
			if (result<10) {
				zikan="0"+zikan;
			}
	        return zikan;
		}else{
			sValue=-sValue;
			result2=sValue % 60;
	        result=(sValue-result2) / 60;
	        if (result2==0) {
	            result3="00";
	        }else if (result2<10){
	            result3="0"+result2.toString();
	        }else{
	            result3=result2;
	        }
	        zikan=result.toString()+result3;
			if (result<10) {
				zikan="0"+zikan;
			}
	        return "-"+zikan;
		}
    }else{
        return "0000";
    }
}

/**
 * 機    能：時間大小の比較                          
 * 引    数：start_time  開始時刻   end_time   終了時刻
 * 戻 り 値：true:正常  false:異常 
 */
 
function compNumber(start_time,end_time){
    starthh=new Number(start_time.substring(0,2)).valueOf();
    startmm=new Number(start_time.substring(2,4)).valueOf();
    endhh=new Number(end_time.substring(0,2)).valueOf();
    endmm=new Number(end_time.substring(2,4)).valueOf();
	if (starthh>endhh){
		return false;
	}else{
		if (starthh==endhh) {
			if (startmm>endmm){
				return false;
			}else{
				return true;
			}
		}else{
			return true;
		}
	}
}

/**
 * 機    能：全角チェック                        
 * 引    数：MOJI---文字列 
 * 戻 り 値：true:正常  false:異常 
 */
function ZenkakuCheck(MOJI)
{
    var i,chart,trant;

    var char_len=("あ".length);

    var all_len=0;
    var hlf_len=0;
    var hlf_spc=0;

    all_len=MOJI.length;                          //半角スペースを外す前の文字数
    trant=MOJI.replace(/[ ]/g,"");                //半角スペースを外す

    hlf_spc=all_len-trant.length;                 //半角スペース数
    for (i=0;i<trant.length;i=i+char_len)
    {
        chart=trant.charAt(i);

        //半角英数字　又は　半角カナの場合
        if ((chart.charCodeAt(0)>=33 && chart.charCodeAt(0)<=126) || 
            (chart.charCodeAt(0)>=65377 && chart.charCodeAt(0)<=65439)){
            hlf_len=hlf_len+1;
        }
    }

    //全角以外が入力された場合
	if (hlf_len!=0 ){
        return false;  
    }
    return true; 
}

/**                       
 * 機    能：数字だけで構成されていることをチェック                                        
 * @param: szData  検査データ                              
 * @return：true:正常  false:異常                            
 */
function checkNumberOnly(szData){
	var len = szData.length;
	var i;
	var wk;
	for(i=0;i < len;i++){
		wk = szData.substr(i,1);
		if(!((wk=="1")||(wk=="2")||(wk=="3")||(wk=="4")||(wk=="5")||(wk=="6")||(wk=="7")||(wk=="8")||(wk=="9")||(wk=="0"))){
			return false;
		}
	}
	
	if(isNaN(parseFloat(szData))){
		return false;
	}
	return true;
}

/**                       
 * 機    能：目前コントローラが一件だけですか                                      
 * @param:  objName   コントローラ名称                      
 * @return：true:一件だけ  false:一件以上
 */
function isOneRow(objName){
	var cnt = 0;
	
	
	
	for (var i=0; i<document.FORM_COMMON.elements.length; i++) {
	
		if (document.FORM_COMMON.elements[i].name == objName) {
			cnt = cnt + 1;
			if (cnt >1 ) {
				return false;
			}
		}
	}
	
	if (cnt==1) {
		return true;
	} else {
		return false;
	}
	
}

//BP1-0100B- 0039↓
//半角のチェック
/**                       
 * 機    能：半角チェック	                                
 * @param:  MOJI   文字列     
 * @return：true:ASCIIのみ  false:ASCII以外を含む
 */
function HankakuCheck(MOJI){
  //文字列について
  if(MOJI == undefined){
    return false;
  }
  
  
  for( var j = 0 ; j < MOJI.length ; j++ ){
  
    //ASCIIは0x20(32)以上0x7e(126)まで
    if ( MOJI.charCodeAt(j) < 32 || MOJI.charCodeAt(j) > 126 ){
	  return false;
    }
  }
  return true;
}
//BP1-0100B- 0039↑

/**                       
 * 機    能：文字列の長さを取得する
 * @param:  inStr   文字列     
 * @return：文字列の長さ
 */
function getStringLength(inStr) {
	
	var len = 0;
	
	
	
	for (var i = 0 ; i < inStr.length; i++ ) {
	
	
		if (HankakuCheck(inStr.charAt(i))==true) {
			len = len + 1;
		} else {
			len = len + 2;
		}
	}
	
	return len;
	
}


/**
	*機    能：勤続年月がフォーマットにしたがっていること
	*@param: obj  対象
	*@param: errobj  エラー対象	
	* @return：true:正常  false:異常                               
	*/
	function checkWorkYM( obj,errobj,aimFrm ){
		//無し
		if (obj.value.length == 0){
			return true;
		}
		//1,2,3,4,5,6,7,8,9,0,/などだけ
		if (fnIsDateType(obj)==false){
			showErrorEx(errobj.value,obj,null,aimFrm);	
			return false;
		}
		//一つ"/"だけあるか
		if ( onlyOneSplit(obj) == false){
			showErrorEx(errobj.value,obj,null,aimFrm);	
			return false;
		}
	   //1/9 -->01/09
	   if ( addZero(obj) == false ){
	   	  showErrorEx(errobj.value,obj,null,aimFrm);	
	   	  return false;
	   } 
	  return true;
	}
	
    /** 機    能：NN には 00〜80
     *  MMには 00〜11 が入る
	 *  ＮおよびＭが一桁の場合、先頭を0埋めする。
	 *  例： 1/9 → 01/09	
	 * @param obj 対象
	 * @return：true:正常  false:異常   
	 */
	function addZero(obj){
		
		var split = obj.value.indexOf("/");		
		var year = obj.value.substring(0,split);

		//BP1-0100B-0235↓
		yearCheck1 = new Number(year);
		yearCheck2 = yearCheck1.toString(); 
		year = yearCheck2;
		if( year.length > 2){
			return false;
		}
		//BP1-0100B-0235↑

		if( year.length == 1){
			if(year>=0&&year<=9){
				year="0"+year;
			}
		}

		var month = obj.value.substring(split+1,obj.value.length);

		//BP1-0100B-0235↓
		monthCheck1 = new Number(month);
		monthCheck2 = monthCheck1.toString(); 
		month = monthCheck2;
		if( month.length > 2){
			return false;
		}
		//BP1-0100B-0235↑

		if( month.length == 1){
			if(month>=0&&month<=9){
				month="0"+month;
			}
		}
	  	if (year<"00"||year>"80"){
	  		return false;	 
	  	}	  	
	  	if(month<"00"||month>"11"){
	  		return false;
	  	}
		obj.value = year+"/"+month;
		return true;
	}
	/**
	 * 機    能：　一つ"/"だけあるか
	 * @param obj 対象
	 * @return true　一つだけ  false　無い或いは一つ以上
	 */
	function onlyOneSplit(obj){
		var firstIndex = obj.value.indexOf("/",0);	
		if (firstIndex <0){
			//01-00 kato.ADD -->
			Check1 = new Number(obj.value);
			Check2 = Check1.toString(); 
			if(Check2.length > 4){
				return false;
			}
			var zero = ""; 
			
			
			for (var i=1 ; i<=4-Check2.length; i++) { 
			
				zero = zero + "0";
			}
			Check2 = zero + Check2;
			var y = Check2.substring(0,2);
			var m = Check2.substring(2,4);
			obj.value = y+"/"+m;
			//01-00 kato.ADD <--

			return true;
		}	
		var lastIndex = obj.value.lastIndexOf("/",obj.value.length-1);
		if (firstIndex == lastIndex){
			return true;
		} else {
			return false;
		}
	
	}

/**
 * 機能：msg内の最も先頭に近い置換用文字列を置き換える。
 * 　　　置換用文字列は"{n}" (ただし、nは0以上の整数)
 * @param msg  埋め込み先の文字列
 * @param item 埋め込む文字列
 * @return msg 埋め込んだ後の文字列
 * 使用例：	str1 : "ErrID : {0}、{1}を入力してください。"
 * 			str2 : "社員番号"
 * 			のとき、replaceMsg(str1, str2)の戻り値は、
 *			"ErrID : 社員番号、{1}を入力してください。" になる。
 * 備考：「数字が最小」ではなく「最も先頭に近い」置換用文字列が処理対象なので注意すること。
 */
function replaceMsg(msg, item){
	msg = msg.replace(/\{\d\}/, item);
	return msg;
}

function fnReplaceSpecialFonts(inStr){
	
	return inStr;
}
//BP1-0100B- 0039↓

/**
 * 機    能：エラーダイアログがあれば、制御を行う。		                          
 * 引    数：                        
 * 戻 り 値：true 制御する　false　制御しない
 */
function haveAlert() {
	if(top.MENU!=null){
		if (top.MENU.document.FORM_COMMON.HaveAlert.value=="have") {
			return true;
		} else {
		    return false;
		}
	}
	else{
		return true;
	}
}
/**
 * 機    能：エラーダイアログがあれば、制御を行う。(Popup子画面に使用)                      
 * 引    数：                        
 * 戻 り 値：true 制御する　false　制御しない
 */
function haveAlertForChild() {

	var menuHnd = getMenuFram();

	if(menuHnd!=null){
		var haveAlertObj = menuHnd.document.FORM_COMMON.HaveAlert;
		if(haveAlertObj!=null){
			if (haveAlertObj.value=="have") {
				return true;
			}
		}
	}
	return false;
}

/**
 * 機    能：制御フラグをクリアする	                          
 * 引    数：                        
 * 戻 り 値：         
 */
function clearAlertFlag() {
	opener.top.MENU.document.FORM_COMMON.HaveAlert.value=""; 
	return false;
}

/**                       
 * 機    能：目前コントローラが一件だけですか                                      
 * @param:  frmName フォーム名称    objName   コントローラ名称                      
 * @return：コントローラ件数　　0:一件もありません  1:一件だけ 以外:一件以上
 */
function getObjCount(frmName,objName){
	var cnt = 0;
	var objFrm = eval("document." + frmName);
    var nMaxLength = 0;
	if(objFrm){
	  nMaxLength = objFrm.elements.length;

	  
	  
	  for (var i=0; i < nMaxLength; i++) {
	  
		  if (objFrm.elements[i].name == objName) {
			  cnt = cnt + 1;
		  }
	  }
	}
	return cnt;
	
}

//BP1-0100B- 0039↑

// 01-00 ADD↓
// 警告後の値の設定を行う。
function setTextValueAfterAlert(flg ,obj, keeperIndex,aimFrm){
		if(keeperIndex==null){
			keeperIndex="";
		}
		var keeperObj ;

		try {

		if(aimFrm == undefined){
			keeperObj = eval("OPERATION.document.FORM_COMMON."+obj.name+"Keeper"+keeperIndex);
		}else{
			keeperObj = eval("OPERATION."+aimFrm+".document.FORM_COMMON."+obj.name+"Keeper"+keeperIndex);
		}

		} catch(e) {
		}
		
		if(keeperObj!=null){
			if(flg){
				keeperObj.value = obj.value;
				return true;
			}else{
				obj.value=keeperObj.value;
			}
		}
		return false;
}
function fnCheckDate(frmName,obj,dateKind,keeperIndex,aimFrm){
    //B1-0100-003 子画面に対応
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
    if(self && self.top && self.top.MENU){
      if (haveAlert() == true) {
        return false;   
      }
    }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
    if(opener && opener.top && opener.top.MENU){
      if(haveAlertForChild() == true){
        return false;
      }
    } else if(top.MENU) {
      if (haveAlert() == true) {
        return false;   
      }
    }

  var checkFlag = checkDate(frmName,obj,dateKind,aimFrm);
  return setTextValueAfterAlert(checkFlag,obj,keeperIndex,aimFrm);
}
function fnCheckInputString(frmName,obj,maxLength,keeperIndex,aimFrm) {
  if (haveAlert() == true) {
    return false;   
  }
  var checkFlag = checkInputString(frmName,obj,maxLength,aimFrm);
  return setTextValueAfterAlert(checkFlag,obj,keeperIndex,aimFrm);
}
// 01-00 ADD↑
//B1-0100-003 ADD ↓
function fnCheckCode(frmName,obj,maxLength,keeperIndex,aimFrm) {
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
  if(self && self.top && self.top.MENU){
    if (haveAlert() == true) {
      return false;   
    }
  }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
  if(opener && opener.top && opener.top.MENU){
    if(haveAlertForChild() == true){
      return false;
    }
  } else if(top.MENU) {
    if (haveAlert() == true) {
      return false;   
    }
  }

  var checkFlag = checkCode(frmName,obj,maxLength,aimFrm);
  return setTextValueAfterAlert(checkFlag,obj,keeperIndex,aimFrm);
}

function fnCheckInputString_andTrim(frmName,obj,maxLength,keeperIndex,aimFrm) {
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
  if(self && self.top && self.top.MENU){
    if (haveAlert() == true) {
      return false;   
    }
  }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
  if(opener && opener.top && opener.top.MENU){
    if(haveAlertForChild() == true){
      return false;
    }
  } else if(top.MENU) {
    if (haveAlert() == true) {
      return false;   
    }
  }

  var checkFlag = checkInputString_andTrim(frmName,obj,maxLength,aimFrm);
  return setTextValueAfterAlert(checkFlag,obj,keeperIndex,aimFrm);
}

function fnCheckPersonCode(frmName,obj,maxLength,keeperIndex,aimFrm) {
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
  if(self && self.top && self.top.MENU){
    if (haveAlert() == true) {
      return false;   
    }
  }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
  if(opener && opener.top && opener.top.MENU){
    if(haveAlertForChild() == true){
      return false;
    }
  } else if(top.MENU) {
    if (haveAlert() == true) {
      return false;   
    }
  }

  var checkFlag = checkPersonCode(frmName,obj,maxLength,aimFrm);
  return setTextValueAfterAlert(checkFlag,obj,keeperIndex,aimFrm);
}

function fnCheckYearMonth(frmName,obj,dateKind,keeperIndex,aimFrm) {
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
  if(self && self.top && self.top.MENU){
    if (haveAlert() == true) {
      return false;   
    }
  }else
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
  if(opener && opener.top && opener.top.MENU){
    if(haveAlertForChild() == true){
      return false;
    }
  } else if(top.MENU) {
    if (haveAlert() == true) {
      return false;   
    }
  }

  var checkFlag = checkYearMonth(frmName,obj,dateKind,aimFrm);
  return setTextValueAfterAlert(checkFlag,obj,keeperIndex,aimFrm);
}

//B1-0100-003 ADD ↑

function getMenuFram(){
	var childWin = window.self;
	var parentWin = childWin.opener;
// Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
	if (childWin && childWin.top && childWin.top.MENU) {
		return childWin.top.MENU;
	}
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
	while(parentWin != null){
		childWin = parentWin;
// Add by 李鉄鋼 2006/9/26 for QX-0201-013 begin
		if (childWin && childWin.top && childWin.top.MENU) {
			return childWin.top.MENU;
		}
//Add by 李鉄鋼 2006/9/26 for QX-0201-013 end
		parentWin = parentWin.opener;
	}

	return childWin.top.MENU;
}

/**
* 確認メッセージを表示する。
* 引数：strMsg メッセージ内容(文字列）
* 戻り値：OKを押下した場合：true , それ以外：false
*/
function showConfirm(strMsg){
	var menuHnd = getMenuFram();
	if(menuHnd!=null){
		var haveAlertObj = menuHnd.document.FORM_COMMON.HaveAlert;
		if(haveAlertObj!=null){

			haveAlertObj.value="have";
			var rtn = confirm(strMsg);
			haveAlertObj.value="";

			return rtn;
		}
	}
	return false;
}

/**
 * 機能：半角英数記号(全角および半角カタカナ以外)チェック
 * 引数：文字列
 * 戻値：true 半角英数記号のみの文字列 false 半角英数記号以外が使用されている文字列
 */
function checkEnglishOrNumberOrSymbol(inStr) 
{
    var compareString  = "abcdefghijklmnopqrstuvwxyz"
                       + "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                       + "1234567890"
                       + "!#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ "
                       + '"';
    
    for (var i = 0; i < inStr.length; i++) {
        if (compareString.indexOf(inStr.charAt(i)) == -1) {
            return false;
        }
    }
    return true;
}

/**
 * 機    能：日付大小の比較                          
 * 引    数：start_date  開始日付   end_date   終了日付
 * 戻 り 値：true:正常  false:異常 
 */
function compDate(start_date,end_date){

    startYYYY = new Number(start_date.substring(0,4)).valueOf();
    startMM   = new Number(start_date.substring(5,7)).valueOf();
    startDD   = new Number(start_date.substring(8,10)).valueOf();
    endYYYY   = new Number(end_date.substring(0,4)).valueOf();
    endMM     = new Number(end_date.substring(5,7)).valueOf();
    endDD     = new Number(end_date.substring(8,10)).valueOf();
    
    if(startYYYY>endYYYY){
      return false;
    }else if(startYYYY==endYYYY){
      if(startMM>endMM){
        return false;
      }else if(startMM==endMM){
        if(startDD>endDD){
          return false;
        }else {
          return true;
        }
      }else {
        return true;
      }
    }else {
      return true;
    }
}

/**
 * 機能：メニューの「作業票部分に前日以前と同じ作番・作業コードを表示するか」
チェックボックスの値を取得する（指定のオブジェクトにセット）
 * 引数: obj 値を設定するオブジェクト
 * 戻値：設定値("0":off "1":on)
 */
function getCostInputDivision(obj) {

	if(top.MENU != null){
		if (top.MENU.document.FORM_COMMON.costInputDivisionDisp != null) {
			if (top.MENU.document.FORM_COMMON.costInputDivisionDisp.checked){
				obj.value = "1";
			}else{
				obj.value = "0";
			}
		}
	}

	return true;
}

//JobCost0203開発 西安カナック 劉庫 2007/12/26 追加 開始

//残業警告値一覧ポップアップ表示用
var WC220WHnd = null;
var WC220Popuplock = null;
function doWC220Show() {
    //警告があれば、制御を行う。
    if (haveAlert() == true) {
        return false;
    }
    if (WC220Popuplock == null) {
        WC220Popuplock = "lock";
        
        OPERATION.document.FORM_INVOKER.StateID.value = "WC220"; 
        OPERATION.document.FORM_INVOKER.NextLabel.value = "WC220";
        OPERATION.document.FORM_INVOKER.LabelName.value = "WC220";
        
        WC220WHnd = window.open('', 'DispName_14', 'status=no,resizable=yes,scrollbars=yes,width=600,height=340,left=100,top=100');
        OPERATION.document.FORM_INVOKER.target='DispName_14'; 

        OPERATION.document.FORM_INVOKER.submit();

        WC220Popuplock = null;
    }
    return false;
}

//子画面を閉じる
function doWC220Close() {
    if(WC220WHnd!=null && !WC220WHnd.closed){
        WC220WHnd.close();
    }
}
//JobCost0203開発 西安カナック 劉庫 2007/12/26 追加 終了
// BC0203-SK1-0033 20080617 yo-takamura START
/**
 *  機    能：文字列から日付型へ変換する
 */
function getDateObj(pDate) {
  var year = pDate.substring(0, 4);
  var month = pDate.substring(5, pDate.indexOf("/", 5));
  var day = pDate.substring(pDate.indexOf("/", 5) + 1, pDate.length);
  //return new Date(year, month, day);
  return new Date(year, month - 1, day);
}
// BC0203-SK1-0033 20080617 yo-takamura END

// ADD 2014/12/22 COMTURE MM230_作番指定（ver.02-07） START
/**
 * 機    能：checkInputString_andTrimの半角カナを除いたチェックをする
 * @param: frmName　フォーム名 　obj　コントロール     maxLength 入力できる桁数
 * @return：true:正常  false:異常
 */
function checkInputString_andTrim2(frmName,obj,maxLength,aimFrm) {

	TmpStr = obj.value;
	obj.value = Trim(TmpStr);

	inStr = obj.value;

	if (inStr.length==0 ){
		return true;
	}

	//禁則文字チェック
	if (KINSOKU(inStr) == true) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E012");
		}else{
			errobj = getObject(frmName, "ZZ00E012",aimFrm);
		}
		showErrorEx(errobj.value,obj,null,aimFrm);

		return false;
	}

	//入力最大文字数を超えていない。
	//MOD 2015/01/21 y.kotaka MM230_作番指定（ver.02-07）0207-CT1-007 START
	//nFinalLength = getStringLength(inStr);
	nFinalLength = getStringLength_kana(inStr);
	//MOD 2015/01/21 y.kotaka MM230_作番指定（ver.02-07）0207-CT1-007 END

	if (nFinalLength > maxLength) {
		if(aimFrm == undefined){
			errobj = getObject(frmName, "ZZ00E013");
		}else{
			errobj = getObject(frmName, "ZZ00E013",aimFrm);
		}
		showErrorEx(errobj.value,obj,null,aimFrm);

		return false;
	}

	return true;
}
// ADD 2014/12/22 COMTURE MM230_作番指定（ver.02-07） END
// ADD 2015/01/21 y.kotaka MM230_作番指定（ver.02-07）0207-CT1-007 START
/**                       
 * 機    能：文字列の長さを取得する
 * @param:  inStr   文字列     
 * @return：文字列の長さ
 */
function getStringLength_kana(inStr) {
	
	var len = 0;
	
	for (var i = 0 ; i < inStr.length; i++ ) {
	
		if (HankakuCheck(inStr.charAt(i))==true) {
			len = len + 1;
        } else if (HankakuCheck_kana(inStr.charAt(i))==true) {
            len = len + 1;
        } else {
            len = len + 2;
        }
    }
    return len;
}

/**
 * 機    能：半角カナチェック
 * @param:  MOJI   文字列
 * @return：true:ASCIIのみ  false:ASCII以外を含む
 */
function HankakuCheck_kana(MOJI){
  //文字列について
  if(MOJI == undefined){
    return false;
  }
  for( j = 0 ; j < MOJI.length ; j++ ){
    //ASCIIは0xFF61(65377)以上0xFF9F(65439)まで
    test = MOJI.charCodeAt(j);
    if ( MOJI.charCodeAt(j) < 65377 || MOJI.charCodeAt(j) > 65439 ){
      return false;
    }
  }
  return true;
}
//ADD y.kotaka 2015/01/21 END
// ADD 2015/01/21 y.kotaka MM230_作番指定（ver.02-07）0207-CT1-007 END